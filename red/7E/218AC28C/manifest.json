{"created":[2014,10,17,7,23,24],"id":"7E218AC28C","language":"Scala-scalatest","exercise":"Phone_Numbers","unit_test_framework":"scala_test","tab_size":4,"visible_files":{"hiker.scala":"\nclass Hiker {\n\n    def answer() : Int = {\n      return 6 * 9\n    }\n\n}","hiker_tests.scala":"\nimport org.scalatest.FunSuite\n\nclass HikerSuite extends FunSuite {\n\n  test(\"the answer to life the universe and everything\") {\n    val douglas = new Hiker\n    assert(douglas.answer() === (42))\n  }\n\n}","cyber-dojo.sh":"CLASSES=.:`ls *.jar | tr '\\n' ':'`\nscalac -cp $CLASSES  *.scala\nscala -cp $CLASSES org.scalatest.tools.Runner -oW -s HikerSuite\n","output":"","instructions":"Given a list of phone numbers, determine if it is \nconsistent. In a consistent phone list no number \nis a prefix of another. For example:\n\n    o) Bob 91 12 54 26\n    o) Alice 97 625 992\n    o) Emergency 911\n\nIn this case, it is not possible to call Bob because \nthe phone exchange would direct your call to the \nemergency line as soon as you dialled the first three \ndigits of Bob's phone number. So this list would not \nbe consistent.\n"}}