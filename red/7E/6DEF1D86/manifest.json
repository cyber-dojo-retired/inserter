{"created":[2015,10,1,5,32,41],"id":"7E6DEF1D86","language":"Scala-scalatest","exercise":"Prime_Factors","unit_test_framework":"scala_test","tab_size":4,"visible_files":{"hiker.scala":"\nclass Hiker {\n\n    def answer(): Int = {\n      return 6 * 9\n    }\n\n}","hiker_tests.scala":"\nimport org.scalatest.FunSuite\n\nclass HikerSuite extends FunSuite {\n\n  test(\"the answer to life the universe and everything\") {\n    val douglas = new Hiker\n    assert(douglas.answer() === (42))\n  }\n\n}","cyber-dojo.sh":"rm *.class\nCLASSES=.:`ls /scalatest/*.jar | tr '\\n' ':'`\nscalac -cp $CLASSES  *.scala\nscala -cp $CLASSES org.scalatest.tools.Runner -oW -s HikerSuite\n","output":"","instructions":"Note: The initial code and test files form a\nsimple example to start you off.\nThey are *not* related to the chosen exercise,\nwhose instructions now follow...\n- - - - - - - - - - - - - - - - - - - - - - -\nFactorize a positive integer number into its prime factors.\n\nFor example:\n\n\t 2 -> [2]\n\t 3 -> [3]\n\t 4 -> [2,2]\n\t 6 -> [2,3]\n\t 9 -> [3,3]\n\t12 -> [2,2,3]\n\t15 -> [3,5]\n\n"}}